dplyr::filter(COMID %in% milp_stream_ids),
color = "#3cdd78",
opacity = 0.5
)
check = leaflet_lines %>%
dplyr::filter(FCODE != 55800, !COMID %in% milp_stream_ids)
View(check)
unique(st_geometry_type(check))
leaf_proxy <- leaf_proxy %>%
leafgl::addGlPolylines(data = leaflet_lines %>%
dplyr::filter(FCODE != 55800, !COMID %in% milp_stream_ids),
color = "#d46666",
opacity = 0.5
)
leaf_proxy <- leaf_proxy %>%
leafgl::addGlPolylines(data = leaflet_lines %>%
dplyr::filter(FCODE != 55800, !COMID %in% milp_stream_ids),
color = "#d46666",
opacity = 0.5
)  %>%
leafgl::addGlPolylines(
data = leaflet_lines %>%
dplyr::filter(COMID %in% milp_stream_ids),
color = "#3cdd78",
opacity = 0.5
)
prtf_cust[h_inc]
View(marginal_line_ids)
rm(list=ls())
library(here)
library(leaflet)
library(leafgl)
library(sf)
library(tidyverse)
library(ROI)
library(ROI.plugin.glpk)
load(here("data", "D.rda"))
load(here("data", "E.rda"))
load(here("data", "culverts_cmb.rda"))
load(here("data", "wrias.rda"))
load(here("data", "lines_simp.rda"))
load(here("data", "marginal_line_ids.rda"))
source(here("R", "fct_suggest.R"))
source(here("R", "fct_custom.R"))
#inputs ----
points = culverts_cmb #culverts
lines = lines_simp #lines with linestring geometries
marginal_line_ids = marginal_line_ids #comids for all lines marginally upstream of each point
leaf_proxy <- wrias %>%
leaflet::leaflet() %>%
leaflet::addProviderTiles("CartoDB.Positron", group = "Grayscale", options = leaflet::providerTileOptions(minZoom = 7))  %>%
leaflet::addScaleBar("bottomleft") %>%
leaflet::addPolygons(
popup =  ~ paste0(
"<b>WRIA Name:</b> ",
WRIA_NM,
"<br>",
"<b>WRIA Number:</b> ",
WRIA_NR
),
weight = 1.5,
opacity = 1,
color = "#1c1cff",
fillColor = "transparent"
)
prtf_cust =
culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::pull(site_id) %>%
sort()
prtf_cust = prtf_cust[1:100]
map_leaflet_custom(
leaf_proxy,
points, #culverts
lines, #lines with linestring geometries
prtf_cust, #inputs from mod_Custom
E, #full connectivity matrix
marginal_line_ids
)
source(here("R", "fct_custom.R"))
map_leaflet_custom(
leaf_proxy,
points, #culverts
lines, #lines with linestring geometries
prtf_cust, #inputs from mod_Custom
E, #full connectivity matrix
marginal_line_ids
)
library(here)
library(leaflet)
library(leafgl)
library(sf)
library(tidyverse)
library(ROI)
library(ROI.plugin.glpk)
load(here("data", "D.rda"))
load(here("data", "E.rda"))
load(here("data", "culverts_cmb.rda"))
load(here("data", "wrias.rda"))
load(here("data", "lines_simp.rda"))
load(here("data", "marginal_line_ids.rda"))
source(here("R", "fct_suggest.R"))
source(here("R", "fct_custom.R"))
names(culverts_cmb)
unique(culverts_cmb$unique_owner_type_code)
unique(culverts_cmb$owner_type_code)
culverts_cmb$unique_owner_type_code[1:25]
culverts_cmb$unique_owner_type_code[1:100]
culverts_cmb$unique_owner_type_code[1:200]
culverts_cmb$unique_owner_type_code[50]
check <- grepl(c("1", "2", "3"), culverts_cmb$unique_owner_type_code[1:200])
??grepl
paste(c("1", "2", "3"), sep = " |")
paste0(c("1", "2", "3"), sep = " |")
paste0(as.integer(c("1", "2", "3")), sep = " |")
s.integer(c("1", "2", "3"))
as.integer(c("1", "2", "3"))
paste0(as.integer(c("1", "2", "3")), sep = " |", collapse = TRUE)
paste0(as.integer(c("1", "2", "3")), sep = " |")
paste0(as.integer(c("1", "2", "3")), sep = '|')
paste0(c("a", "b"))
paste0("a", "b")
strsplit(c("1", "2", "3"))
strsplit(c("1", "2", "3"), split = "|")
paste0(c(1, 2, 3))
strsplit(c("1", "2", "3"), split = ",")
paste0(strsplit(c("1", "2", "3"), split = ","), sep = "|")
grepl(c("1", "2", "3"), culverts_cmb$unique_owner_type_code[1:200])
grepl(paste0(c("1", "2", "3")), culverts_cmb$unique_owner_type_code[1:200])
paste0(c("1", "2", "3"))
paste0(paste0(c("1", "2", "3")), sep = "|")
as.integer(c("1", "2", "3"))
paste0(as.integer(c("1", "2", "3")))
class(as.integer(c("1", "2", "3")))
as.vector(as.integer(c("1", "2", "3")))
paste0(as.vector(as.integer(c("1", "2", "3"))), sep = "|")
paste(as.vector(as.integer(c("1", "2", "3"))))
paste(c("1", "2", "3"), sep ="|", collapse = "")
paste(c("1", "2", "3"), sep ="|", collapse = "|")
paste(c("1", "2", "3"), collapse = "|")
grepl(paste(c("1", "2", "3"), collapse = "|"), culverts_cmb$unique_owner_type_code[1:200])
grepl(paste(c("1", "2", "3"), collapse = "|"), culverts_cmb$unique_owner_type_code[1:200])[50]
library(here)
library(leaflet)
library(leafgl)
library(sf)
library(tidyverse)
library(ROI)
library(ROI.plugin.glpk)
load(here("data", "D.rda"))
load(here("data", "E.rda"))
load(here("data", "culverts_cmb.rda"))
load(here("data", "wrias.rda"))
load(here("data", "lines_simp.rda"))
load(here("data", "marginal_line_ids.rda"))
source(here("R", "fct_suggest.R"))
source(here("R", "fct_custom.R"))
#inputs ----
points = culverts_cmb #culverts
lines = lines_simp #lines with linestring geometries
marginal_line_ids = marginal_line_ids #comids for all lines marginally upstream of each point
owner_sel_suggest = c("2", "3", "7")
culverts_owner <- culverts_cmb$unique_owner_type_code[1 : 250]
culverts_owner
culverts_owner[50]
culverts_owner[50]
culverts_owner[170]
paste0(owner_sel_suggest, collapse = "|")
paste(owner_sel_suggest, collapse = "|")
check_matches <- grepl(paste(owner_sel_suggest, collapse = " |"), culverts_owner)
culverts_owner[50]
check_matches[50]
culverts_owner[170]
check_matches[170]
check_matches <- grepl(paste(owner_sel_suggest, collapse = " | "), culverts_owner)
culverts_owner[50]
check_matches[50]
paste(owner_sel_suggest, collapse = " | ")
check_matches <- grepl(paste(owner_sel_suggest, collapse = "|"), culverts_owner)
culverts_owner[50]
check_matches[50]
culverts_owner[170]
check_matches[170]
check_matches
library(here)
library(leaflet)
library(leafgl)
library(sf)
library(tidyverse)
library(ROI)
library(ROI.plugin.glpk)
load(here("data", "D.rda"))
load(here("data", "E.rda"))
load(here("data", "culverts_cmb.rda"))
load(here("data", "wrias.rda"))
load(here("data", "lines_simp.rda"))
load(here("data", "marginal_line_ids.rda"))
source(here("R", "fct_suggest.R"))
source(here("R", "fct_custom.R"))
#inputs ----
points = culverts_cmb #culverts
lines = lines_simp #lines with linestring geometries
marginal_line_ids = marginal_line_ids #comids for all lines marginally upstream of each point
owner_sel_suggest = c("2", "3", "7")
wria_sel = 7
owner_sel = owner_sel_suggest
soln_wrias <- unique(points[soln, ]$wria_number)
owner_sel_suggest = c("2", "3", "7")
culverts_owner <- culverts_cmb$unique_owner_type_code[1 : 250]
check_matches <- grepl(paste(owner_sel_suggest, collapse = "|"), culverts_owner)
culverts_owner[50]
check_matches[50]
culverts_owner[170]
check_matches[170]
soln <- solve_opt(
points = culverts_cmb, #points with variables: hmarg_net, cost, and wria_number
budget = 1e6, #budget constraint
D = D, #connectivity matrix
wria_sel = 0, #wria to run the optimization problem on
owner_sel = owner_sel_suggest
)
soln_wrias <- unique(points[soln, ]$wria_number)
in_soln_wrias <- points$wria_number %in% soln_wrias
library(here)
library(leaflet)
library(leafgl)
library(sf)
library(tidyverse)
library(ROI)
library(ROI.plugin.glpk)
load(here("data", "D.rda"))
load(here("data", "E.rda"))
load(here("data", "culverts_cmb.rda"))
load(here("data", "wrias.rda"))
load(here("data", "lines_simp.rda"))
load(here("data", "marginal_line_ids.rda"))
source(here("R", "fct_suggest.R"))
source(here("R", "fct_custom.R"))
#inputs ----
points = culverts_cmb #culverts
lines = lines_simp #lines with linestring geometries
marginal_line_ids = marginal_line_ids #comids for all lines marginally upstream of each point
leaf_proxy <- wrias %>%
leaflet::leaflet() %>%
leaflet::addProviderTiles("CartoDB.Positron", group = "Grayscale", options = leaflet::providerTileOptions(minZoom = 7))  %>%
leaflet::addScaleBar("bottomleft") %>%
leaflet::addPolygons(
popup =  ~ paste0(
"<b>WRIA Name:</b> ",
WRIA_NM,
"<br>",
"<b>WRIA Number:</b> ",
WRIA_NR
),
weight = 1.5,
opacity = 1,
color = "#1c1cff",
fillColor = "transparent"
)
#opt ----
soln <- solve_opt(
points = culverts_cmb, #points with variables: hmarg_net, cost, and wria_number
budget = 1e6, #budget constraint
D = D, #connectivity matrix
wria_sel = 0, #wria to run the optimization problem on
owner_sel = 0
)
library(DT)
hab_tab <- culverts_cmb %>% filter(soln)
library(here)
library(leaflet)
library(leafgl)
library(sf)
library(tidyverse)
library(ROI)
library(ROI.plugin.glpk)
library(DT)
hab_tab <- culverts_cmb %>% filter(soln)
sum(soln)
View(hab_tab)
names(hab_tab)
hab_tab$potential_species
grepl("Chinook", potential_species)
grepl("Chinook", hab_tab$potential_species)
hab_tab <- culverts_cmb %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Chinook habitat` = sum(hmarg_net * grepl("Chinook", potential_species))
)
View(hab_tab)
check <- hab_tab[grepl("Chinook", hab_tab$potential_species)]
View(check)
check <- hab_tab[grepl("Chinook", hab_tab$potential_species),]
grepl("Chinook", hab_tab$potential_species)
hab_tab <- culverts_cmb %>%
dplyr::filter(soln)
check <- hab_tab[grepl("Chinook", hab_tab$potential_species),]
View(check)
sum(check$hmarg_net)
hab_tab <- culverts_cmb %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Chinook habitat` = sum(hmarg_net * grepl("Chinook", potential_species))
)
View(hab_tab)
hab_tab_dat <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln)
unique(hab_tab_dat$potential_species)
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = sum(hmarg_net * grepl("Bull", potential_species)),
`Chinook habitat (km)` = sum(hmarg_net * grepl("Chinook", potential_species)),
`Chum habitat (km)` = sum(hmarg_net * grepl("Chum", potential_species)),
`Coho habitat (km)` = sum(hmarg_net * grepl("Coho", potential_species)),
`Pink habitat (km)` = sum(hmarg_net * grepl("Pink", potential_species)),
`Resident trout habitat (km)` = sum(hmarg_net * grepl("Resident", potential_species)),
`Sockeye habitat (km)` = sum(hmarg_net * grepl("Sockeye", potential_species)),
`Steelhead habitat (km)` = sum(hmarg_net * grepl("Steelhead", potential_species)),
`SR Cutthroat habitat (km)` = sum(hmarg_net * grepl("Cutthroat", potential_species))
`Total habitat (km)` = sum(hmarg_net)
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = sum(hmarg_net * grepl("Bull", potential_species)),
`Chinook habitat (km)` = sum(hmarg_net * grepl("Chinook", potential_species)),
`Chum habitat (km)` = sum(hmarg_net * grepl("Chum", potential_species)),
`Coho habitat (km)` = sum(hmarg_net * grepl("Coho", potential_species)),
`Pink habitat (km)` = sum(hmarg_net * grepl("Pink", potential_species)),
`Resident trout habitat (km)` = sum(hmarg_net * grepl("Resident", potential_species)),
`Sockeye habitat (km)` = sum(hmarg_net * grepl("Sockeye", potential_species)),
`Steelhead habitat (km)` = sum(hmarg_net * grepl("Steelhead", potential_species)),
`SR Cutthroat habitat (km)` = sum(hmarg_net * grepl("Cutthroat", potential_species)),
`Total habitat (km)` = sum(hmarg_net)
)
??Dt
DT::datatable(hab_tab)
DT::datatable(t(hab_tab))
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = sum(hmarg_net * grepl("Bull", potential_species)),
`Chinook habitat (km)` = sum(hmarg_net * grepl("Chinook", potential_species)),
`Chum habitat (km)` = sum(hmarg_net * grepl("Chum", potential_species)),
`Coho habitat (km)` = sum(hmarg_net * grepl("Coho", potential_species)),
`Pink habitat (km)` = sum(hmarg_net * grepl("Pink", potential_species)),
`Resident trout habitat (km)` = sum(hmarg_net * grepl("Resident", potential_species)),
`Sockeye habitat (km)` = sum(hmarg_net * grepl("Sockeye", potential_species)),
`Steelhead habitat (km)` = sum(hmarg_net * grepl("Steelhead", potential_species)),
`SR Cutthroat habitat (km)` = sum(hmarg_net * grepl("Cutthroat", potential_species)),
`Total habitat (km)` = sum(hmarg_net)
) %>%
t()
View(hab_tab)
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = sum(hmarg_net * grepl("Bull", potential_species)),
`Chinook habitat (km)` = sum(hmarg_net * grepl("Chinook", potential_species)),
`Chum habitat (km)` = sum(hmarg_net * grepl("Chum", potential_species)),
`Coho habitat (km)` = sum(hmarg_net * grepl("Coho", potential_species)),
`Pink habitat (km)` = sum(hmarg_net * grepl("Pink", potential_species)),
`Resident trout habitat (km)` = sum(hmarg_net * grepl("Resident", potential_species)),
`Sockeye habitat (km)` = sum(hmarg_net * grepl("Sockeye", potential_species)),
`Steelhead habitat (km)` = sum(hmarg_net * grepl("Steelhead", potential_species)),
`SR Cutthroat habitat (km)` = sum(hmarg_net * grepl("Cutthroat", potential_species)),
`Total habitat (km)` = sum(hmarg_net)
) %>%
t() %>%
dplyr::rename(`Habitat (km)` = V1)
DT::datatable()
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = sum(hmarg_net * grepl("Bull", potential_species)),
`Chinook habitat (km)` = sum(hmarg_net * grepl("Chinook", potential_species)),
`Chum habitat (km)` = sum(hmarg_net * grepl("Chum", potential_species)),
`Coho habitat (km)` = sum(hmarg_net * grepl("Coho", potential_species)),
`Pink habitat (km)` = sum(hmarg_net * grepl("Pink", potential_species)),
`Resident trout habitat (km)` = sum(hmarg_net * grepl("Resident", potential_species)),
`Sockeye habitat (km)` = sum(hmarg_net * grepl("Sockeye", potential_species)),
`Steelhead habitat (km)` = sum(hmarg_net * grepl("Steelhead", potential_species)),
`SR Cutthroat habitat (km)` = sum(hmarg_net * grepl("Cutthroat", potential_species)),
`Total habitat (km)` = sum(hmarg_net)
) %>%
t()
View(hab_tab)
class(hab_tab)
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = round(sum(hmarg_net * grepl("Bull", potential_species)), 2),
`Chinook habitat (km)` = round(sum(hmarg_net * grepl("Chinook", potential_species)), 2),
`Chum habitat (km)` = round(sum(hmarg_net * grepl("Chum", potential_species)), 2),
`Coho habitat (km)` = round(sum(hmarg_net * grepl("Coho", potential_species)), 2),
`Pink habitat (km)` = round(sum(hmarg_net * grepl("Pink", potential_species)), 2),
`Resident trout habitat (km)` = round(sum(hmarg_net * grepl("Resident", potential_species)), 2),
`Sockeye habitat (km)` = round(sum(hmarg_net * grepl("Sockeye", potential_species)), 2),
`Steelhead habitat (km)` = round(sum(hmarg_net * grepl("Steelhead", potential_species)), 2),
`SR Cutthroat habitat (km)` = round(sum(hmarg_net * grepl("Cutthroat", potential_species)), 2),
`Total habitat (km)` = round(sum(hmarg_net), 2)
) %>%
t()
View(hab_tab)
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = round(sum(hmarg_net * grepl("Bull", potential_species)), 2),
`Chinook habitat (km)` = round(sum(hmarg_net * grepl("Chinook", potential_species)), 2),
`Chum habitat (km)` = round(sum(hmarg_net * grepl("Chum", potential_species)), 2),
`Coho habitat (km)` = round(sum(hmarg_net * grepl("Coho", potential_species)), 2),
`Pink habitat (km)` = round(sum(hmarg_net * grepl("Pink", potential_species)), 2),
`Resident trout habitat (km)` = round(sum(hmarg_net * grepl("Resident", potential_species)), 2),
`Sockeye habitat (km)` = round(sum(hmarg_net * grepl("Sockeye", potential_species)), 2),
`Steelhead habitat (km)` = round(sum(hmarg_net * grepl("Steelhead", potential_species)), 2),
`SR Cutthroat habitat (km)` = round(sum(hmarg_net * grepl("Cutthroat", potential_species)), 2),
`Total habitat (km)` = round(sum(hmarg_net), 2)
)
check <- DT::transpose(hab_dat, keep.names = "col", make.names = "Habitat (km)")
??transpose
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = round(sum(hmarg_net * grepl("Bull", potential_species)), 2),
`Chinook habitat (km)` = round(sum(hmarg_net * grepl("Chinook", potential_species)), 2),
`Chum habitat (km)` = round(sum(hmarg_net * grepl("Chum", potential_species)), 2),
`Coho habitat (km)` = round(sum(hmarg_net * grepl("Coho", potential_species)), 2),
`Pink habitat (km)` = round(sum(hmarg_net * grepl("Pink", potential_species)), 2),
`Resident trout habitat (km)` = round(sum(hmarg_net * grepl("Resident", potential_species)), 2),
`Sockeye habitat (km)` = round(sum(hmarg_net * grepl("Sockeye", potential_species)), 2),
`Steelhead habitat (km)` = round(sum(hmarg_net * grepl("Steelhead", potential_species)), 2),
`SR Cutthroat habitat (km)` = round(sum(hmarg_net * grepl("Cutthroat", potential_species)), 2),
`Total habitat (km)` = round(sum(hmarg_net), 2)
)
??DT::datatable()
??DT::datatable
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = round(sum(hmarg_net * grepl("Bull", potential_species)), 2),
`Chinook habitat (km)` = round(sum(hmarg_net * grepl("Chinook", potential_species)), 2),
`Chum habitat (km)` = round(sum(hmarg_net * grepl("Chum", potential_species)), 2),
`Coho habitat (km)` = round(sum(hmarg_net * grepl("Coho", potential_species)), 2),
`Pink habitat (km)` = round(sum(hmarg_net * grepl("Pink", potential_species)), 2),
`Resident trout habitat (km)` = round(sum(hmarg_net * grepl("Resident", potential_species)), 2),
`Sockeye habitat (km)` = round(sum(hmarg_net * grepl("Sockeye", potential_species)), 2),
`Steelhead habitat (km)` = round(sum(hmarg_net * grepl("Steelhead", potential_species)), 2),
`SR Cutthroat habitat (km)` = round(sum(hmarg_net * grepl("Cutthroat", potential_species)), 2),
`Total habitat (km)` = round(sum(hmarg_net), 2)
) %>%
t() %>%
as.data.frame()
View(hab_tab)
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout habitat (km)` = round(sum(hmarg_net * grepl("Bull", potential_species)), 2),
`Chinook habitat (km)` = round(sum(hmarg_net * grepl("Chinook", potential_species)), 2),
`Chum habitat (km)` = round(sum(hmarg_net * grepl("Chum", potential_species)), 2),
`Coho habitat (km)` = round(sum(hmarg_net * grepl("Coho", potential_species)), 2),
`Pink habitat (km)` = round(sum(hmarg_net * grepl("Pink", potential_species)), 2),
`Resident trout habitat (km)` = round(sum(hmarg_net * grepl("Resident", potential_species)), 2),
`Sockeye habitat (km)` = round(sum(hmarg_net * grepl("Sockeye", potential_species)), 2),
`Steelhead habitat (km)` = round(sum(hmarg_net * grepl("Steelhead", potential_species)), 2),
`SR Cutthroat habitat (km)` = round(sum(hmarg_net * grepl("Cutthroat", potential_species)), 2),
`Total habitat (km)` = round(sum(hmarg_net), 2)
) %>%
t() %>%
as.data.frame() %>%
dplyr::rename(`Habitat (km)` = V1)
View(hab_tab)
hab_tab <- culverts_cmb %>%
sf::st_drop_geometry() %>%
dplyr::filter(soln) %>%
dplyr::summarize(
`Bull trout` = round(sum(hmarg_net * grepl("Bull", potential_species)), 2),
`Chinook` = round(sum(hmarg_net * grepl("Chinook", potential_species)), 2),
`Chum` = round(sum(hmarg_net * grepl("Chum", potential_species)), 2),
`Coho` = round(sum(hmarg_net * grepl("Coho", potential_species)), 2),
`Pink` = round(sum(hmarg_net * grepl("Pink", potential_species)), 2),
`Resident` = round(sum(hmarg_net * grepl("Resident", potential_species)), 2),
`Sockeye` = round(sum(hmarg_net * grepl("Sockeye", potential_species)), 2),
`Steelhead` = round(sum(hmarg_net * grepl("Steelhead", potential_species)), 2),
`SR Cutthroat` = round(sum(hmarg_net * grepl("Cutthroat", potential_species)), 2),
`Total` = round(sum(hmarg_net), 2)
) %>%
t() %>%
as.data.frame() %>%
dplyr::rename(`Habitat (km)` = V1)
DT::datatable(hab_tab)
18/3
1/3
6/(1/3)
100,000,000/500,000
100000000/500000
load("upstream_inputs.Rdata")
load(here("data-raw", "upstream_inputs.Rdata"))
library(here)
load(here("data-raw", "upstream_inputs.Rdata"))
names(culverts_cmb)
5*66000

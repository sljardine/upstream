load("upstream_inputs.Rdata")
load("upstream_inputs.Rdata")
names(huc12)
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
name(huc12)
names(huc12)
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
library(here)
load(here("data-raw", "upstream_inputs.Rdata"))
View(culverts_cmb)
names(culverts_cmb)
load("upstream_inputs.Rdata")
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(lines_ds, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
names(culverts_cmb)
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(lines_ds, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
library(here)
load(here("data-raw", "upstream_inputs.Rdata"))
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(lines_ds, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
setwd("/Users/sunnyjardine/Dropbox/upstream/upstream")
load("upstream_inputs.Rdata")
setwd("/Users/sunnyjardine/Dropbox/upstream/upstream/data-raw")
load("upstream_inputs.Rdata")
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(lines_ds, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
library(here)
library(tidyverse)
load(here("data-raw", "upstream_inputs_gm.Rdata"))
usethis::use_data(culverts_cmb_gm, overwrite = TRUE)
usethis::use_data(welcome_map_points, overwrite = TRUE)
usethis::use_data(D_gm, overwrite = TRUE)
usethis::use_data(E_gm, overwrite = TRUE)
usethis::use_data(lines_simp_gm, overwrite = TRUE)
usethis::use_data(lines_ds_gm, overwrite = TRUE)
usethis::use_data(marginal_line_ids_gm, overwrite = TRUE)
usethis::use_data(downstream_line_ids_gm, overwrite = TRUE)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
library(here)
library(tidyverse)
load(here("data-raw", "upstream_inputs_gm.Rdata"))
usethis::use_data(culverts_cmb_gm, overwrite = TRUE)
usethis::use_data(welcome_map_points, overwrite = TRUE)
usethis::use_data(D_gm, overwrite = TRUE)
usethis::use_data(E_gm, overwrite = TRUE)
usethis::use_data(lines_simp_gm, overwrite = TRUE)
usethis::use_data(lines_ds_gm, overwrite = TRUE)
usethis::use_data(marginal_line_ids_gm, overwrite = TRUE)
usethis::use_data(downstream_line_ids_gm, overwrite = TRUE)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
summary(culverts_cmb_gm$hfull_area_natural)
summary(culverts_cmb_gm$hfull_area)
rm(list=ls())
load(here("data-raw", "upstream_inputs_gm.Rdata"))
library(here)
library(tidyverse)
load(here("data-raw", "upstream_inputs_gm.Rdata"))
summary(culverts_cmb_gm$hfull_area)
summary(culverts_cmb_gm$hfull_area_natural)
setwd("/Users/sunnyjardine/Dropbox/upstream/upstream")
library(here)
load(here("data-raw", "upstream_inputs.Rdata"))
load(here("data-raw", "upstream_inputs_gm.Rdata"))
usethis::use_data(culverts_cmb, overwrite = TRUE)
usethis::use_data(D, overwrite = TRUE)
usethis::use_data(E, overwrite = TRUE)
usethis::use_data(lines_simp, overwrite = TRUE)
usethis::use_data(lines_ds, overwrite = TRUE)
usethis::use_data(marginal_line_ids, overwrite = TRUE)
usethis::use_data(downstream_line_ids, overwrite = TRUE)
usethis::use_data(wrias, overwrite = TRUE)
usethis::use_data(huc12, overwrite = TRUE)
usethis::use_data(huc12_wrias, overwrite = TRUE)
usethis::use_data(culverts_cmb_gm, overwrite = TRUE)
usethis::use_data(welcome_map_points, overwrite = TRUE)
usethis::use_data(D_gm, overwrite = TRUE)
usethis::use_data(E_gm, overwrite = TRUE)
usethis::use_data(lines_simp_gm, overwrite = TRUE)
usethis::use_data(lines_ds_gm, overwrite = TRUE)
usethis::use_data(marginal_line_ids_gm, overwrite = TRUE)
usethis::use_data(downstream_line_ids_gm, overwrite = TRUE)
usethis::use_data(huc12_wrias_gm, overwrite = TRUE)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
